// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';


function create(facing, coord) {
  return {
          facing: facing,
          coord: coord
        };
}

function turn(turnTo, robot) {
  if (turnTo) {
    switch (robot.facing) {
      case /* North */0 :
          return {
                  facing: /* East */1,
                  coord: robot.coord
                };
      case /* East */1 :
          return {
                  facing: /* South */2,
                  coord: robot.coord
                };
      case /* South */2 :
          return {
                  facing: /* West */3,
                  coord: robot.coord
                };
      case /* West */3 :
          return {
                  facing: /* North */0,
                  coord: robot.coord
                };
      
    }
  } else {
    switch (robot.facing) {
      case /* North */0 :
          return {
                  facing: /* West */3,
                  coord: robot.coord
                };
      case /* East */1 :
          return {
                  facing: /* North */0,
                  coord: robot.coord
                };
      case /* South */2 :
          return {
                  facing: /* East */1,
                  coord: robot.coord
                };
      case /* West */3 :
          return {
                  facing: /* South */2,
                  coord: robot.coord
                };
      
    }
  }
}

function forward(robot) {
  var match = robot.coord;
  var y = match.y;
  var x = match.x;
  var facing = robot.facing;
  switch (facing) {
    case /* North */0 :
        return {
                facing: facing,
                coord: {
                  x: x,
                  y: y - 1 | 0
                }
              };
    case /* East */1 :
        return {
                facing: facing,
                coord: {
                  x: x + 1 | 0,
                  y: y
                }
              };
    case /* South */2 :
        return {
                facing: facing,
                coord: {
                  x: x,
                  y: y + 1 | 0
                }
              };
    case /* West */3 :
        return {
                facing: facing,
                coord: {
                  x: x - 1 | 0,
                  y: y
                }
              };
    
  }
}

function move(command, robot) {
  if (command) {
    return turn(command._0, robot);
  } else {
    return forward(robot);
  }
}

function facingToString(facing) {
  switch (facing) {
    case /* North */0 :
        return "North";
    case /* East */1 :
        return "East";
    case /* South */2 :
        return "South";
    case /* West */3 :
        return "West";
    
  }
}

function readableRobot(robot) {
  return "Facing: " + facingToString(robot.facing) + "\nposition: " + String(robot.coord.x) + ", " + String(robot.coord.y);
}

exports.create = create;
exports.turn = turn;
exports.forward = forward;
exports.move = move;
exports.facingToString = facingToString;
exports.readableRobot = readableRobot;
/* No side effect */
